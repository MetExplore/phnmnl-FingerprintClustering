setwd("~/bin/fingerprint_clustering")
#global variables
font_size=3
nb_metabolites=9
max_cluster=6
margin=par(mar=c(5, 4, 4, 2) + 1.1)
interval=1
typeClassif=1
#max_cluster=nb_metabolites/1.5
#choix du niveau de coupure
default_graph_par=par()
library(gclus)
library(cluster)
#Pseudo-random settings:
#set.seed(1)
#milisec * PID
set.seed(as.numeric(format(Sys.time(), "%OS2"))*100 * Sys.getpid())
#data=read.table("data_test.tsv",header=F,sep="\t",dec=".")
data=read.table("matrix.txt",header=F,sep="\t",dec=".",row.names=1)
colnames(data)=rownames(data)
#conversion into distance
distance_matrix=as.dist(data)
if (typeClassif==1){
classif=pam(data,3,diss=F,stand=F)
}else if (typeClassif==2){
classif=kmeans(data,centers=4,nstart=100)
}else if (typeClassif==3){
classif=hclust(distance_matrix,method="ward.D2")
}else if (typeClassif==4){
classif=hclust(distance_matrix,method="complete")
}else if (typeClassif==5){
classif=hclust(distance_matrix,method="median")
}
classif
classif=kmeans(data,centers=4,nstart=100)
#clusplot
clusplot(data,classif,color=T,shade=T,lines=1)
#clusplot
clusplot(data,clusters,color=T,shade=T,lines=1)
classif
#clusplot
clusplot(data,classif$cluster,color=T,shade=T,lines=1)
?clusplot
#clusplot
clusplot(data,classif$cluster,color=T,shade=T,lines=0)
#clusplot
clusplot(data,classif$cluster,color=T,shade=T,lines=0,labels=5)
